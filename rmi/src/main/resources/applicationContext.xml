<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd ">
    <!--扫描注解-->
    <context:component-scan base-package="com.jnshu"/>
    <!--导入redis配置-->
    <import resource="classpath:redis.xml"/>
    <!--导入第三方API接口所需参数-->
    <!--<util:properties id="config" location="classpath*:config.properties" />-->
    <!--<context:property-placeholder  location = "classpath*:config.properties"/>-->
    <!--导入数据库参数等其他参数配置，如短信配置参数-->
    <context:property-placeholder location="classpath*:*.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="5" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="20000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="600000" />
        <property name="maxEvictableIdleTimeMillis" value="900000" />

        <property name="validationQuery" value="select 1" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="keepAlive" value="true" />
        <property name="phyMaxUseCount" value="100000" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <!--mybatis配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--添加mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:*Mapper.xml"/>
    </bean>

    <!--要扫描映射接口的包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jnshu.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--memcached配置-->
    <bean name="memcachedClient"
          class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean" destroy-method="shutdown">
        <property name="servers" value="127.0.0.1:11211"/>
    </bean>

    <!--RMI-验证码-->
    <bean name="checkNum" class="com.jnshu.service.CheckNumServiceImpl"/>
    <bean name="checkNumServiceRmi" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="service"  ref="checkNum"/>
        <property name="serviceName" value="checkNumRmi"/>
        <property name="serviceInterface" value="com.jnshu.service.CheckNumService"/>
        <property name="registryPort" value="1023"/>
        <!--<property name="servicePort" value="1023"/>-->
    </bean>
    <!--RMI-用户-->
    <bean name="user" class="com.jnshu.service.UserServiceImpl"/>
    <bean name="userServiceRmi" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="service"  ref="user"/>
        <property name="serviceName" value="userRmi"/>
        <property name="serviceInterface" value="com.jnshu.service.UserService"/>
        <property name="registryPort" value="1023"/>
        <!--<property name="servicePort" value="1023"/>-->
    </bean>
    <!--RMI-职业-->
    <bean name="job" class="com.jnshu.service.JobServiceImpl"/>
    <bean name="jobServiceRmi" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="service"  ref="job"/>
        <property name="serviceName" value="jobRmi"/>
        <property name="serviceInterface" value="com.jnshu.service.JobService"/>
        <property name="registryPort" value="1023"/>
        <!--<property name="servicePort" value="1023"/>-->
    </bean>
</beans>